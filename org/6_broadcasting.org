#+title: Snap! Broadcasting
#+subtitle: UBMS Game and Robo Programming with Snap! and Python
#+options: toc:nil num:nil ^:nil
#+startup: overview hideblocks indent inlineimages
#+attr_html: :width 400px
[[../img/circus.png]]

* Synchronize sprites with broadcasting
#+attr_html: :width 400px
#+caption: Ernest Briggs and bucherbird listening to gramophone
[[../img/broadcasting.jpg]]

- Two sprites are not automatically synchronized

- We can synchronize manually or rely on /broadcasting/

- Broadcasting = sending message to a listener

- This is also the basis of OOP [Object Oriented Programming]

- Snap! broadcasting commands:

  [[../img/snap_broadcast.png]]

* Example: greeting
  #+attr_html: :width 400px
  [[../img/hellohello.png]]

- ~Sprite_1~:
  #+attr_html: :width 120px
  [[../img/broadcasthello.png]]

- ~Sprite_2~:
  #+attr_html: :width 120px
  [[../img/broadcasthellotoyoutoo.png]]
  
- Here is a more elaborate [[https://snap.berkeley.edu/project?username=birkenkrahe&projectname=broadcasting_fruit][example program]]:
  #+attr_html: :width 300px
  [[../img/broadcasting_fruit_apple.png]]

  [[../img/broadcasting_fruit_melon.png]]
  
* Practice broadcasting

- Turn the conversation between Alonzo and the Robot into a
  broadcast/receive script. 
  #+attr_latex: :width 400px
  #+caption: A conversation between two characters
  [[../img/snap_greenflag2.png]]

- Open this project to get the original script: [[https://bit.ly/greenFlag][bit.ly/greenFlag]]

- Duplicate the whole script for each sprite before changing it

- [[https://bit.ly/GreenFlagBroadcast][Practice solution]]

* Program 4: Circus

- Write a "circus" program in which the ringmaster calls animals (like
  an elephant) or actors (like a clown) one by one and each performs
  some act. Use at least one animal and one actor, and a suitable
  background.

- The dinosaur should be hidden at the start and appear upon being called.

- The dinosaur should hide when the performance is over.

- Upload your solution [[https://lyon.instructure.com/courses/1721/assignments/14946][to Canvas]]  

- [[https://snap.berkeley.edu/project?username=birkenkrahe&projectname=circus][Sample solution]].

* Pair programming: project animation
#+attr_html: :width 400px
[[../img/highground.png]]

1) Team up with one other partner
2) Design a short story animation. Something like:
   - a nursery rhyme
   - a folk story
   - your own story
   - a clip from your favorite story or film or game
3) The story should be narrated as sub-titles or as part of the
   animation (you can create subtitles with the ~write [..] size [..]~
   code block in the ~Pen~ category.
4) Requirements:
   - Green flag should start the animation
   - At least 2 sprites
   - Draw at least one background (using the paint editor)
   - Use as many commands learnt so far as possible
   - Use sounds and costumes
   - Sprite names must be as per the story (not sprite1, sprite2 etc)
   - As each scene of the story appears anywhere on the screen, the
     animation of that scene should be visible
   - The story should be slow and easy to understand
   - The animation should take at least 10 seconds but not more than a
     minute.
   - Put a short description (or the story itself) in the project notes

 Here is a story example "[[https://snap.berkeley.edu/project?username=isaac%2erice&projectname=High%20Ground][High Ground]]" by Isaac Rice and Jakobe Alcorn
   (Fall 2022)
5) Upload your solution to Canvas
